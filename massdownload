#!/bin/bash
###########################################################
#
# Template
#
#
#
###########################################################

# Libraries
# source ${HOME}/bin/libs/ask

###########################################################
#
# function help
#
#
#
###########################################################
function help () {
cat<<EOF
Usage:
     -d|--domains
     -f|--folder
     -l|--log
     -p|--password
     -r|--referer
     -s|--site
     -t|--type
     -T|--atype
     -u|--user|--username
     -w|--wait
     --fix
     --sort
     --debug
EOF
}

###########################################################
#
# function configure_download
#
#
#
###########################################################
function configure_download () {
    if [[ -z $SITE ]]; then
	SITE="swim"
    fi

    if [[ -z $WAIT ]]; then
	WAIT=30
    fi

    
    if [[ -z "${LOG}" ]]; then
	LOG="-o wget.log"
    fi

#    if [[ -z "${RFILE_TYPES}" ]]; then
#	RFILE_TYPES="--reject html,js,css,ico"
#    fi
    
   case $SITE in
	swim)
	    URL=http://www.si.com/swimsuit
	    REFERER="--referer=http://www.si.com"
	    if [[ -z ${DIRECTORY} ]]; then
		DIRECTORY="SI Swimsuit"
	    fi
	    if [[ -z ${DOMAINS} ]]; then
		DOMAINS="--domains=cdn-s3.si.com,www.si.com"
	    fi
	    ;;
	mx4px)
	    URL=http://mx4px.andyfrazier.net/tunes.php
	    REFERER="--referer=http://mx4px.andyfrazier.net"
	    if [[ -z ${DIRECTORY} ]]; then
		DIRECTORY="Andy Frazier"
	    fi
	    if [[ -z ${DOMAINS} ]]; then
		DOMAINS="--domains=http://mx4px.andyfrazier.net"
	    fi
	    ;;

	*)
	    if [[ -z ${DIRECTORY} ]]; then
		DIRECTORY="tmp"
	    fi
	    URL=${SITE}
	    ;;
    esac

}

###########################################################
#
# function download
#
#
#
###########################################################
function download () {
    if [[ ! -d ${DIRECTORY} ]]; then
	mkdir -p ${DIRECTORY}
    fi
    /usr/bin/time -a -o time.log \
    wget \
	-e robots=no \
	${LOG} \
	--continue \
	--progress=bar \
	--show-progress  \
	--timestamping \
	--wait=${WAIT} \
	--random-wait \
	--no-directories \
	--directory-prefix="${DIRECTORY}" \
	--adjust-extension \
	${UNAME} \
	${PASSWORD} \
	--header="Accept: text/html" \
	${REFERER} \
	--user-agent "Mozilla/5.0 (X11; Fedora; Linux x86_64; rv:40.0) Gecko/20100101 Firefox/40.0" \
	--recursive \
	--convert-links \
	--backup-converted \
	--mirror \
	--page-requisites \
	${RFILE_TYPES} \
	--ignore-case \
	${DOMAINS} \
	--span-hosts \
	${URL}
}


###########################################################
#
# function fixfiles
#
#
#
###########################################################
function fixfiles () {
    cd "$DIRECTORY"
    for FILE in *\?*
    do
	NEWNAME=$(echo "$FILE"| cut -d? -f1)
	
	mv ${FILE} ${NEWNAME}
    done

    find . -type f -name '*.*' -print0 | while IFS= read -r -d '' f
    do
	base=${f%.*}
	ext=${f##*.}
	a=$base.${ext,,}
	[ "$a" != "$f" ] && mv -- "$f" "$a"
    done

    
    cd ..
}

###########################################################
#
# function sort_files
#
#
#
###########################################################
function sort_files () {
    cd "${DIRECTORY}"
    for i in *.* ; do
	FILE=$(basename "$i")
	echo $FILE
	LTR="$(tr '[:lower:]' '[:upper:]' <<< ${FILE:0:1})${FILE:1}"
	LTR=$(echo $LTR|cut -c1)
	re='^[0-9]+$'
	if ! [[ $LTR =~ $re ]] ; then
	    FIELD1=$(echo ${FILE}|cut -d- -f1|cut -d_ -f1 | cut -d. -f1)
	    FIELD2=$(echo ${FILE}|cut -d- -f2|cut -d_ -f2 | cut -d. -f1)
	    FIELD3=$(echo ${FILE}|cut -d- -f3|cut -d_ -f3 | cut -d. -f1)
		
	    FIELD1="$(tr '[:lower:]' '[:upper:]' <<< ${FIELD1:0:1})${FIELD1:1}"
	    FIELD2="$(tr '[:lower:]' '[:upper:]' <<< ${FIELD2:0:1})${FIELD2:1}"
	    FIELD3="$(tr '[:lower:]' '[:upper:]' <<< ${FIELD3:0:1})${FIELD3:1}"
	    FIELD4=""
	    FIELD5=""
	    
	    if [[ "${FIELD1}" == "${FIELD2}" ]]; then
		FIELD2=""
	    fi
	    if [[ "${FIELD1}" == "${FIELD3}" ]]; then
		FIELD3=""
	    fi
	    
	    echo $FIELD1
	    echo $FIELD2
	    echo $FDELD3
	    case $FIELD1 in
		H|N|Z) FIELD1=$FIELD2
		       FIELD2="${FIELD3}"
		       FIELD3=""
		       ;;
		Hannnah)
		    FIELD1=Hannah
		    ;;
		Valerie)
		    FIELD4=$(echo ${FILE}|cut -d- -f4|cut -d_ -f2 | cut -d. -f1)
		    FIELD5="/$(echo ${FILE}|cut -d- -f5|cut -d_ -f3 | cut -d. -f1)"
		    FIELD4=" $(tr '[:lower:]' '[:upper:]' <<< ${FIELD4:0:1})${FIELD4:1}"
		    ;;
		*) echo "No change"
		   ;;
	    esac
	    case $FIELD2 in
		*[0-9]*)
		    FIELD2=""
		    FIELD3=""
		    ;;
		*) echo "No change 2"
		   ;;
	    esac		
	    
	    if [[ -n $FIELD2 ]]; then
		FIELD2=" ${FIELD2}"
	    fi
	    if [[ -n $FIELD3 ]]; then
		case $FIELD3 in
		    2014|2015|2016)
			FIELD3="/${FIELD3}"
			;;
		    Lingerie|*[0-9]*|Vr|Turks|Thick|Casting)
			FIELD3=""
			;;
		    
		    Model|Amore|Poses|Feature|Naked)
			FIELD3=""
			;;
		    *)    
			FIELD3=" ${FIELD3}"
			;;
		esac
	    fi
	    NAME="${FIELD1}${FIELD2}${FIELD3}${FIELD4}${FIELD5}/"
	else
	    NAME=""
	fi
	if [[ -z $LTR ]]; then
	    echo "Woops"
	else
	    mkdir -p "${LTR}/${NAME}"
	    mv "$i" "${LTR}/${NAME}${FILE}"
	fi
    done
}


###########################################################
#
# function main
#
#
#
###########################################################
function main () {
    while [ -n "$1" ] 
    do
	case $1 in
	    -d|--domains) DOMAINS="--domains=${2}"; shift 2;;
	    -f|--folder) DIRECTORY=$2; shift 2;;
	    -l|--log) LOG="-o ${2}"; shift 2;;
	    -p|--password) PASSWORD="--http-password=${2}"; shift 2;;
	    -r|--referer) REFERER="--referer=${2}"; shift 2;;
	    -s|--site) SITE=$2; shift 2;;
	    -t|--type) RFILE_TYPES="--reject ${2}"; shift 2;;
	    -T|--atype) AFILE_TYPES="${2}"; shift 2;;
	    -u|--user|--username) UNAME="--http-user=${2}"; shift 2;;
	    -w|--wait) WAIT=$2; shift 2;;
	    --fix)
		if [[ -z $2 ]]; then
		    echo "Missing Directory"
		    exit 1
		else
		    DIRECTORY=$2
		    FUNCTION=fixfiles
		    shift 2
		fi
		   ;;
	    --sort)
		if [[ -z $2 ]]; then
		    echo "Missing Directory"
		    exit 1
		else
		    DIRECTORY=$2
		    FUNCTION=sort_files
		    shift 2
		fi
		   ;;
	    --debug) DEBUG="yes"; shift 1;;
	    *) help; exit;;
	esac
    done

    case $FUNCTION in
	fixfiles) fixfiles;;
	sort_files) sort_files;;
	*)
	    configure_download
	    download
#	    fixfiles
#	    sort_files
	    ;;
    esac
}

main "$@"
