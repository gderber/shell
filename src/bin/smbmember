#!/usr/bin/env bash
# ======================================================================
#
# Samba
#
# by Geoff S. Derber
#
# This script sets up a samba domain controller or member server.
#
# ======================================================================
function __help () {
    cat << HELP
...
HELP
}

# ======================================================================
#
# stopprocs
#
# Stops all active running samba processes.
#
# ======================================================================
function stopprocs () {
    local ACTIVE_PROCS=$(ps ax | egrep "samba|smbd|nmbd|winbindd"|grep -v grep|cut -d/ -f4 |cut -d\  -f1|sort -u)
    
    for PROC in $ACTIVE_PROCS
    do
	case $PROC in
	    winbindd)
		sudo systemctl stop winbind
		;;
	    *mbd)
		sudo systemctl stop ${PROC}
		;;
	    samba)
		sudo systemctl stop samba-ad-dc
		;;
	    *)
		exit 1
		;;
	esac 
    done
}

# ======================================================================
#
# stopprocs
#
# Stops all active running samba processes.
#
# ======================================================================
function removeconf () {
    local CONF=$(smbd -b | grep "CONFIGFILE" | cut -d: -f2|cut -d\  -f2)
    sudo rm /etc/krb5.conf
    sudo rm ${CONF}
}

# ======================================================================
#
# stopprocs
#
# Stops all active running samba processes.
#
# ======================================================================
function cleardirs () {
    local SMBDIRS=$(smbd -b | egrep "LOCKDIR|STATEDIR|CACHEDIR|PRIVATE_DIR"|cut -d: -f2|cut -d\  -f2)

    local DIR
    for DIR in ${SMBDIRS}
    do
	cd ${DIR}
	sudo rm *.tdb *.ldb
    done
}

# ======================================================================
#
# stopprocs
#
# Stops all active running samba processes.
#
# ======================================================================
function getrealm () {
    local REALM=$(domainname -d)

    if [[ ! -n ${REALM} ]]; then
	read -p "What is the realm name" REALM
    fi
    REALM="$(echo ${REALM}|tr a-z A-Z)"
    echo -ne "${REALM}"
}

# ======================================================================
#
# stopprocs
#
# Stops all active running samba processes.
#
# ======================================================================
function createkrb5conf () {
    local REALM=$(getrealm)
    local DOMAIN=$(echo ${REALM}|cut -d. -f1)
    sudo cat << KRB5CONF > /etc/krb5.conf
[libdefaults] 
     default_realm = ${REALM}
     dns_lookup_realm = false 
     dns_lookup_kdc = true 

[realms]
    ${REALM} = {
        auth_to_local = RULE:[1:${DOMAIN}\\$1]
    } 
KRB5CONF
}

# ======================================================================
#
# stopprocs
#
# Stops all active running samba processes.
#
# ======================================================================
function createsmbconf () {
    local REALM=$(getrealm)
    local DOMAIN=$(echo ${REALM}|cut -d. -f1)
    local LCREALM="$(echo ${REALM} |tr A-Z a-z)"
    sudo cat << SMBCONF > /etc/samba/smb.conf
# ======================================================================
#
#
#
# ======================================================================
[global]
netbios name = $(hostname| tr a-z A-Z)
workgroup = ${DOMAIN}
realm = ${REALM}

security = ADS

# Logging
max log size = 1000
log file = /var/log/samba/log.%m
log level = 1 passdb:10 winbind:10 idmap:10


######## User Settings #######
username map = /etc/samba/users.map
# idmap config for ...
idmap config * : backend = tdb
idmap config * : range = 3000-7999
# idmap config for ${DOMAIN} domain
idmap config ${DOMAIN} : backend = ad
idmap config ${DOMAIN} : schema_mode = rfc2307
idmap config ${DOMAIN} : range = 100000-9999999
idmap config ${DOMAIN} : unix_nss_info = yes
idmap config ${DOMAIN} : unix_primary_group = yes

######## Winbind ###########
# template shell = /bin/bash
# template home = /home/%D/%U
#winbind trusted domains only = no
#winbind use default domain = yes
winbind enum users = yes
winbind enum groups = yes
winbind refresh tickets = Yes 

####### Enable ACL Support ######
vfs objects = acl_xattr
map acl inherit = yes
store dos attributes = yes

dedicated keytab file = /etc/krb5.keytab
kerberos method = secrets and keytab


# ======================================================================
#
# Share settings
#
# ======================================================================

[netlogon]
        path = /var/lib/samba/sysvol/${LCREALM}/scripts
        read only = No

[sysvol]
        path = /var/lib/samba/sysvol
        read only = No

SMBCONF

}

function verifyhost () {
    local HOSTSLINE="$(grep $(hostname|tr A-Z a-z) /etc/hosts)"
    local HOSTSIP=$(echo "${HOSTSLINE}"|cut -d\  -f1)
    local IPADDR=$(hostname --ip-adress)
    local REALM=$(getrealm)
    local LCREALM="$(echo ${REALM} |tr A-Z a-z)"
    local LCHOSTNAME=$(hostname|tr A-Z a-z)
    
    if [[ "${HOSTIP}" != "${IPADDR}" ]]; then
	echo "Edit hosts"
	exit 1
    fi
    local GETENT="$(getent hosts $(hostname))"
    echo ${HOSTSLINE}
    echo ${GETENT}
    if [[ ${HOSTSLINE} == ${GETENT} ]]; then
	echo "Getent successful"
    else
	echo "Getent failed"
    fi
    
    
}

function createusermap () {
    local REALM=$(getrealm)
    local DOMAIN=$(echo ${REALM}|cut -d. -f1)
    sudo cat << USERMAP > /etc/samba/users.map
!root = ${DOMAIN}\Administrator
USERMAP
}

function joindomain () {
    net ads join -U administrator
}

function startservice () {
    sudo systemctl start winbind
    sudo systemctl start nmbd
}

verifysetup () {
    wbinfo --ping-dc &&
	sleep 10 &&
	getent passwd &&
	sleep 10 &&
        getent group
}

function installsmb () {
    apt install samba libnss-winbind libpam-winbind krb5-user libpam-krb5
}

function isbind9installed () {
    echo -ne "true"
}

function setupdomain () {
    local REALM=$(getrealm)
    local DOMAIN=$(echo ${REALM} | cut -d. -f1)
    local DNS
    local ADMPASS
    local PRVTDIR
    local KRB5CONF
    local LCREALM=$(echo ${REALM}|tr A-Z a-z)
    local HOSTNAME=$(hostname|tr A-Z a-z)

    read -p "Enter your desired Administrator password: " ADMPASS
    [[ "$(isbind9installed)" == "true" ]] && DNS="BIND9_DLZ" || DNS="SAMBA_INTERNAL"

    echo ${DNS}
    sleep 60


    sudo samba-tool \
	 domain provision \
	 --server-role=dc \
	 --use-rfc2307 \
	 --dns-backend=${DNS} \
	 --realm=${REALM} \
	 --domain=${DOMAIN} \
	 --adminpass=${ADMPASS}

    PRVTDIR="=$(smbd -b | egrep "PRIVATE_DIR"|cut -d: -f2|cut -d\  -f2)"
    KRB5CONF="${PRVTDIR}/krb5.conf"

    sudo cp ${KRB5CONF} /etc/

    sudo systemctl start samba-ad-dc
    smbclient -L localhost -U%
    sleep 5
    smbclient //localhost/netlogon -UAdministrator -c 'ls'
    sleep 5
    host -t SRV _ldap._tcp.${LCREALM}.
    sleep 5
    host -t SRV _kerberos._udp.${LCREALM}.
    sleep 5
    host -t A ${HOSTNAME}.${LCREALM}.

    kinit administrator
    klist
}

function setupmember () {
    createkrb5conf
    createsmbconf
    createusermap
    joindomain
    startservice
    verifysetup

}

function main() {
    local ROLE
    
    while [[ -n $1 ]];
    do
	case $1 in
	    --pdc)
		ROLE=pdc
		shift 1
		;;
	    --dc)
		ROLE=dc
		shift 1
		;;
	    --fs)
		ROLE=fileserver
		shift 1
		;;
	    --mbr)
		ROLE=member
		shift 1
		;;
	    -h|--help)
		__help
		exit
		;;
	    *)
		__help
		exit 1
		;;
	esac
    done
    
    #installsmb
    #stopprocs
    #removeconf
    #cleardirs
    #verifyhost
    
    case $ROLE in
	pdc)
	    setupdomain
	    ;;
	dc)
	    adddc
	    ;;
	fileserver|member)
	    setupmember
	    ;;
	esac

}

main $@
