#!/bin/bash

#SRV_LIST="calliope demeter hera hestia mnemosyne aphrodite telete"
SRV_LIST="telete"
DOMAIN="olympus.derber.home"
DEFAULT_APPS="linux-signed-generic tasksel grub2-common emacs-nox openssh-server bash-completion"
DEFAULT_APPS="${DEFAULT_APPS} net-tools ifupdown ecryptfs-tools git glances unattended-upgrades"
DEFAULT_APPS="${DEFAULT_APPS} man sudo git-crypt gnupg2 curl wget rsync screen"
DEFAULT_APPS="${DEFAULT_APPS} libnss-winbind libpam-winbind"

GIT_SERVER_APPS="gitolite"
WEB_SERVER_APPS="apache2 redmine redmine-mysql phpmyadmin ldap-account-manager"
SQL_SERVER_APPS="mariadb-server"
EMAIL_SERVER_APPS=""
ADDC_APPS="samba winbindd bind9 bind9-doc dnsutils"
XEN_APPS="xen"
MYTHBACKEND_APPS="mythtv-backend"
MYTHFRONTEND_APPS="xfce-deskto mythtv-frontend"


function setenvironment () {
    # Ensure screen keeps it's Window # while using sudo
    sudo cat << SCREENSUDOER > /etc/sudoers.d/screen
Defaults       env_keep += "WINDOW"
SCREENSUDOER

    
}

function setetckeeper () {
    sudo cat << ETCGITATTRIBUTES >> /etc/.gitattributes
group filter=git-crypt diff=git-crypt
passwd filter=git-crypt diff=git-crypt
shadow filter=git-crypt diff=git-crypt
pam.d/passwd !filter=git-crypt !diff=git-crypt
cron.daily/passwd !filter=git-crypt !diff=git-crypt
iproute2/group !filter=git-crypt !diff=git-crypt
ETCGITATTRIBUTES

    apt install etckeeper
    
    sudo << ETCGITIGNORE >> /etc/.gitignore

ETCGITIGNORE
}

function mount_srv () {
    local SRV=$1
    local FQDN=$2
    sudo mount /dev/mapper/xen-${SRV}.${FQDN}--disk /xen/${SRV} &&
	sudo mount -o bind /dev /xen/${SRV}/dev &&
	sudo chroot /xen/${SRV} /bin/bash -c "mount -t proc proc /proc" &&
	sudo chroot /xen/${SRV} /bin/bash -c "mount -t sysfs sys /sys" &&
	echo -ne "true"
}

function setupgrub () {
	sudo chroot "/xen/${SRV}" /bin/bash -c "update-grub" &&
	sudo chmod 644 "/xen/${SRV}/boot/grub/grub.cfg" &&
	sudo sed -e --in-place .bak 's|'"mapper/xen-${SRV}.${FQDN}--disk"'|xvda2|g' "/xen/${SRV}/boot/grub/grub.cfg" &&
	echo -ne "true"
}

function installapps () {
    local SRV=$1
    sudo chroot "/xen/${SRV}" /bin/bash -c "apt install ${DEFAULT_APPS}" &&
	echo -ne "true"
}

function setupuser () {
    SRV=$1
    FQDN=$2    
    sudo chroot "/xen/${SRV}" /bin/bash -c "adduser --home /home/pi --shell /bin/bash pi" &&
	sudo chroot "/xen/${SRV}" /bin/bash -c "usermod -a -G sudo pi" &&
	echo -ne "true"
}

function umountsrv () {
    sudo chroot /xen/${SRV} /bin/bash -c "umount /sys" &&
	sudo chroot /xen/${SRV} /bin/bash -c "umount /proc" &&
	sudo umount /xen/${SRV} &&
	echo -ne "true"
}

function finalize () {
    SRV=$1
    FQDN=$2
    sudo mv /etc/xen/${FQDN}.cfg /etc/xen/${SRV}.cfg
    sudo ln -s /etc/xen/${SRV}.cfg /etc/xen/auto/${SRV}.cfg
}

function selectrole () {
    echo "What is the role of this install?" &&
    read role &&
    echo -ne "$role"
}

function xenhost () {
    cat <<DISTRO.CONF >> /etc/xen-tools/distributions.conf
bionic       = ubuntu     pvgrub

DISTRO.CONF
}

function getmirror () {
    MIRRORLIST="http://archive.ubuntu.com http://mirrors.edge.kernel.org/ubuntu/ "
    MIRROR="http://archive.ubuntu.com"
    
    echo -ne "${MIRROR}"
}

function createguest () {
    SRV=$1
    FQDN=$2

    MIRROR="--mirror=$(getmirror)"

    sudo xen-create-image --hostname=${FQDN} &&
	echo -ne "true"
}

function main () {
#    while -n $1
#    do
#	case $1 in
#	    --srv-list)
#		SRV_LIST=$2
#		shift 2
#		;;
#	    *)
#		help
#		exit;;
#	esac
#    done

    for SRV in $SRV_LIST
    do
	FQDN="${SRV}.${DOMAIN}"

	createguest ${SRV} ${FQDN} &&
	SRVMNT=$(mount_srv ${SRV} ${DOMAIN}) &&
	    if [[ "${SRVMNT}" == "true" ]]; then
		role=$(selectrole) &&
		    installapps ${SRV} ${FQDN} &&
		    setupuser ${SRV} ${FQDN} &&
		    setenvironment &&
		    setetckeeper
	    fi &&
	    umountsrv ${SRV} &&
	    finalize ${SRV} ${FQDN}
    done
}

main $@
